// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: faapi.proto

#ifndef PROTOBUF_faapi_2eproto__INCLUDED
#define PROTOBUF_faapi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace faapi {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_faapi_2eproto();
void protobuf_AssignDesc_faapi_2eproto();
void protobuf_ShutdownFile_faapi_2eproto();

class Rect;
class Img;
class DetectResult;
class ExtractResult;
class SearchResult;
class DetectReq;
class DetectResp;
class ExtractReq;
class ExtractResp;
class CompareReq;
class CompareResp;
class InsertReq;
class InsertResp;
class DeleteReq;
class SearchReq;
class SearchResp;
class ListTagsResp;
class GetTagSizeReq;
class GetTagSizeResp;

enum MSG {
  MSG_DETECT_REQ = 0,
  MSG_DETECT_RESP = 1,
  MSG_EXTRACT_REQ = 2,
  MSG_EXTRACT_RESP = 3,
  MSG_COMPARE_REQ = 4,
  MSG_COMPARE_RESP = 5,
  MSG_INSERT_REQ = 6,
  MSG_INSERT_RESP = 7,
  MSG_DELETE_REQ = 8,
  MSG_DELETE_RESP = 9,
  MSG_SEARCH_REQ = 10,
  MSG_SEARCH_RESP = 11,
  MSG_DELETE_TAG_REQ = 12,
  MSG_DELETE_TAG_RESP = 13,
  MSG_LIST_TAGS_REQ = 14,
  MSG_LIST_TAGS_RESP = 15,
  MSG_GET_TAG_SIZE_REQ = 16,
  MSG_GET_TAG_SIZE_RESP = 17
};
bool MSG_IsValid(int value);
const MSG MSG_MIN = MSG_DETECT_REQ;
const MSG MSG_MAX = MSG_GET_TAG_SIZE_RESP;
const int MSG_ARRAYSIZE = MSG_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_descriptor();
inline const ::std::string& MSG_Name(MSG value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_descriptor(), value);
}
inline bool MSG_Parse(
    const ::std::string& name, MSG* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG>(
    MSG_descriptor(), name, value);
}
// ===================================================================

class Rect : public ::google::protobuf::Message {
 public:
  Rect();
  virtual ~Rect();

  Rect(const Rect& from);

  inline Rect& operator=(const Rect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rect& default_instance();

  void Swap(Rect* other);

  // implements Message ----------------------------------------------

  Rect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rect& from);
  void MergeFrom(const Rect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 left = 1;
  inline bool has_left() const;
  inline void clear_left();
  static const int kLeftFieldNumber = 1;
  inline ::google::protobuf::int32 left() const;
  inline void set_left(::google::protobuf::int32 value);

  // optional int32 top = 2;
  inline bool has_top() const;
  inline void clear_top();
  static const int kTopFieldNumber = 2;
  inline ::google::protobuf::int32 top() const;
  inline void set_top(::google::protobuf::int32 value);

  // optional int32 right = 3;
  inline bool has_right() const;
  inline void clear_right();
  static const int kRightFieldNumber = 3;
  inline ::google::protobuf::int32 right() const;
  inline void set_right(::google::protobuf::int32 value);

  // optional int32 bottom = 4;
  inline bool has_bottom() const;
  inline void clear_bottom();
  static const int kBottomFieldNumber = 4;
  inline ::google::protobuf::int32 bottom() const;
  inline void set_bottom(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:faapi.Rect)
 private:
  inline void set_has_left();
  inline void clear_has_left();
  inline void set_has_top();
  inline void clear_has_top();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_bottom();
  inline void clear_has_bottom();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 left_;
  ::google::protobuf::int32 top_;
  ::google::protobuf::int32 right_;
  ::google::protobuf::int32 bottom_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static Rect* default_instance_;
};
// -------------------------------------------------------------------

class Img : public ::google::protobuf::Message {
 public:
  Img();
  virtual ~Img();

  Img(const Img& from);

  inline Img& operator=(const Img& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Img& default_instance();

  void Swap(Img* other);

  // implements Message ----------------------------------------------

  Img* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Img& from);
  void MergeFrom(const Img& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes buf = 1;
  inline bool has_buf() const;
  inline void clear_buf();
  static const int kBufFieldNumber = 1;
  inline const ::std::string& buf() const;
  inline void set_buf(const ::std::string& value);
  inline void set_buf(const char* value);
  inline void set_buf(const void* value, size_t size);
  inline ::std::string* mutable_buf();
  inline ::std::string* release_buf();
  inline void set_allocated_buf(::std::string* buf);

  // optional int32 width = 2;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 2;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // optional int32 height = 3;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 3;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // optional bool isRaw = 4;
  inline bool has_israw() const;
  inline void clear_israw();
  static const int kIsRawFieldNumber = 4;
  inline bool israw() const;
  inline void set_israw(bool value);

  // @@protoc_insertion_point(class_scope:faapi.Img)
 private:
  inline void set_has_buf();
  inline void clear_has_buf();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_israw();
  inline void clear_has_israw();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* buf_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  bool israw_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static Img* default_instance_;
};
// -------------------------------------------------------------------

class DetectResult : public ::google::protobuf::Message {
 public:
  DetectResult();
  virtual ~DetectResult();

  DetectResult(const DetectResult& from);

  inline DetectResult& operator=(const DetectResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectResult& default_instance();

  void Swap(DetectResult* other);

  // implements Message ----------------------------------------------

  DetectResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DetectResult& from);
  void MergeFrom(const DetectResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float confidence = 1;
  inline bool has_confidence() const;
  inline void clear_confidence();
  static const int kConfidenceFieldNumber = 1;
  inline float confidence() const;
  inline void set_confidence(float value);

  // optional .faapi.Rect rect = 2;
  inline bool has_rect() const;
  inline void clear_rect();
  static const int kRectFieldNumber = 2;
  inline const ::faapi::Rect& rect() const;
  inline ::faapi::Rect* mutable_rect();
  inline ::faapi::Rect* release_rect();
  inline void set_allocated_rect(::faapi::Rect* rect);

  // optional bytes faceInfo = 3;
  inline bool has_faceinfo() const;
  inline void clear_faceinfo();
  static const int kFaceInfoFieldNumber = 3;
  inline const ::std::string& faceinfo() const;
  inline void set_faceinfo(const ::std::string& value);
  inline void set_faceinfo(const char* value);
  inline void set_faceinfo(const void* value, size_t size);
  inline ::std::string* mutable_faceinfo();
  inline ::std::string* release_faceinfo();
  inline void set_allocated_faceinfo(::std::string* faceinfo);

  // @@protoc_insertion_point(class_scope:faapi.DetectResult)
 private:
  inline void set_has_confidence();
  inline void clear_has_confidence();
  inline void set_has_rect();
  inline void clear_has_rect();
  inline void set_has_faceinfo();
  inline void clear_has_faceinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::faapi::Rect* rect_;
  ::std::string* faceinfo_;
  float confidence_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static DetectResult* default_instance_;
};
// -------------------------------------------------------------------

class ExtractResult : public ::google::protobuf::Message {
 public:
  ExtractResult();
  virtual ~ExtractResult();

  ExtractResult(const ExtractResult& from);

  inline ExtractResult& operator=(const ExtractResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtractResult& default_instance();

  void Swap(ExtractResult* other);

  // implements Message ----------------------------------------------

  ExtractResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtractResult& from);
  void MergeFrom(const ExtractResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .faapi.Rect rect = 1;
  inline bool has_rect() const;
  inline void clear_rect();
  static const int kRectFieldNumber = 1;
  inline const ::faapi::Rect& rect() const;
  inline ::faapi::Rect* mutable_rect();
  inline ::faapi::Rect* release_rect();
  inline void set_allocated_rect(::faapi::Rect* rect);

  // optional bytes feature = 2;
  inline bool has_feature() const;
  inline void clear_feature();
  static const int kFeatureFieldNumber = 2;
  inline const ::std::string& feature() const;
  inline void set_feature(const ::std::string& value);
  inline void set_feature(const char* value);
  inline void set_feature(const void* value, size_t size);
  inline ::std::string* mutable_feature();
  inline ::std::string* release_feature();
  inline void set_allocated_feature(::std::string* feature);

  // @@protoc_insertion_point(class_scope:faapi.ExtractResult)
 private:
  inline void set_has_rect();
  inline void clear_has_rect();
  inline void set_has_feature();
  inline void clear_has_feature();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::faapi::Rect* rect_;
  ::std::string* feature_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static ExtractResult* default_instance_;
};
// -------------------------------------------------------------------

class SearchResult : public ::google::protobuf::Message {
 public:
  SearchResult();
  virtual ~SearchResult();

  SearchResult(const SearchResult& from);

  inline SearchResult& operator=(const SearchResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResult& default_instance();

  void Swap(SearchResult* other);

  // implements Message ----------------------------------------------

  SearchResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchResult& from);
  void MergeFrom(const SearchResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 faceID = 1;
  inline bool has_faceid() const;
  inline void clear_faceid();
  static const int kFaceIDFieldNumber = 1;
  inline ::google::protobuf::uint64 faceid() const;
  inline void set_faceid(::google::protobuf::uint64 value);

  // optional float score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline float score() const;
  inline void set_score(float value);

  // optional string tagName = 3;
  inline bool has_tagname() const;
  inline void clear_tagname();
  static const int kTagNameFieldNumber = 3;
  inline const ::std::string& tagname() const;
  inline void set_tagname(const ::std::string& value);
  inline void set_tagname(const char* value);
  inline void set_tagname(const char* value, size_t size);
  inline ::std::string* mutable_tagname();
  inline ::std::string* release_tagname();
  inline void set_allocated_tagname(::std::string* tagname);

  // @@protoc_insertion_point(class_scope:faapi.SearchResult)
 private:
  inline void set_has_faceid();
  inline void clear_has_faceid();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_tagname();
  inline void clear_has_tagname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 faceid_;
  ::std::string* tagname_;
  float score_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static SearchResult* default_instance_;
};
// -------------------------------------------------------------------

class DetectReq : public ::google::protobuf::Message {
 public:
  DetectReq();
  virtual ~DetectReq();

  DetectReq(const DetectReq& from);

  inline DetectReq& operator=(const DetectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectReq& default_instance();

  void Swap(DetectReq* other);

  // implements Message ----------------------------------------------

  DetectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DetectReq& from);
  void MergeFrom(const DetectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .faapi.Img img = 1;
  inline bool has_img() const;
  inline void clear_img();
  static const int kImgFieldNumber = 1;
  inline const ::faapi::Img& img() const;
  inline ::faapi::Img* mutable_img();
  inline ::faapi::Img* release_img();
  inline void set_allocated_img(::faapi::Img* img);

  // @@protoc_insertion_point(class_scope:faapi.DetectReq)
 private:
  inline void set_has_img();
  inline void clear_has_img();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::faapi::Img* img_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static DetectReq* default_instance_;
};
// -------------------------------------------------------------------

class DetectResp : public ::google::protobuf::Message {
 public:
  DetectResp();
  virtual ~DetectResp();

  DetectResp(const DetectResp& from);

  inline DetectResp& operator=(const DetectResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectResp& default_instance();

  void Swap(DetectResp* other);

  // implements Message ----------------------------------------------

  DetectResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DetectResp& from);
  void MergeFrom(const DetectResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .faapi.DetectResult results = 1;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 1;
  inline const ::faapi::DetectResult& results(int index) const;
  inline ::faapi::DetectResult* mutable_results(int index);
  inline ::faapi::DetectResult* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::faapi::DetectResult >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::faapi::DetectResult >*
      mutable_results();

  // @@protoc_insertion_point(class_scope:faapi.DetectResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::faapi::DetectResult > results_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static DetectResp* default_instance_;
};
// -------------------------------------------------------------------

class ExtractReq : public ::google::protobuf::Message {
 public:
  ExtractReq();
  virtual ~ExtractReq();

  ExtractReq(const ExtractReq& from);

  inline ExtractReq& operator=(const ExtractReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtractReq& default_instance();

  void Swap(ExtractReq* other);

  // implements Message ----------------------------------------------

  ExtractReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtractReq& from);
  void MergeFrom(const ExtractReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .faapi.Img img = 1;
  inline bool has_img() const;
  inline void clear_img();
  static const int kImgFieldNumber = 1;
  inline const ::faapi::Img& img() const;
  inline ::faapi::Img* mutable_img();
  inline ::faapi::Img* release_img();
  inline void set_allocated_img(::faapi::Img* img);

  // optional bytes faceInfo = 2;
  inline bool has_faceinfo() const;
  inline void clear_faceinfo();
  static const int kFaceInfoFieldNumber = 2;
  inline const ::std::string& faceinfo() const;
  inline void set_faceinfo(const ::std::string& value);
  inline void set_faceinfo(const char* value);
  inline void set_faceinfo(const void* value, size_t size);
  inline ::std::string* mutable_faceinfo();
  inline ::std::string* release_faceinfo();
  inline void set_allocated_faceinfo(::std::string* faceinfo);

  // @@protoc_insertion_point(class_scope:faapi.ExtractReq)
 private:
  inline void set_has_img();
  inline void clear_has_img();
  inline void set_has_faceinfo();
  inline void clear_has_faceinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::faapi::Img* img_;
  ::std::string* faceinfo_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static ExtractReq* default_instance_;
};
// -------------------------------------------------------------------

class ExtractResp : public ::google::protobuf::Message {
 public:
  ExtractResp();
  virtual ~ExtractResp();

  ExtractResp(const ExtractResp& from);

  inline ExtractResp& operator=(const ExtractResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtractResp& default_instance();

  void Swap(ExtractResp* other);

  // implements Message ----------------------------------------------

  ExtractResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtractResp& from);
  void MergeFrom(const ExtractResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .faapi.ExtractResult result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::faapi::ExtractResult& result() const;
  inline ::faapi::ExtractResult* mutable_result();
  inline ::faapi::ExtractResult* release_result();
  inline void set_allocated_result(::faapi::ExtractResult* result);

  // @@protoc_insertion_point(class_scope:faapi.ExtractResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::faapi::ExtractResult* result_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static ExtractResp* default_instance_;
};
// -------------------------------------------------------------------

class CompareReq : public ::google::protobuf::Message {
 public:
  CompareReq();
  virtual ~CompareReq();

  CompareReq(const CompareReq& from);

  inline CompareReq& operator=(const CompareReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompareReq& default_instance();

  void Swap(CompareReq* other);

  // implements Message ----------------------------------------------

  CompareReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompareReq& from);
  void MergeFrom(const CompareReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes feature1 = 1;
  inline bool has_feature1() const;
  inline void clear_feature1();
  static const int kFeature1FieldNumber = 1;
  inline const ::std::string& feature1() const;
  inline void set_feature1(const ::std::string& value);
  inline void set_feature1(const char* value);
  inline void set_feature1(const void* value, size_t size);
  inline ::std::string* mutable_feature1();
  inline ::std::string* release_feature1();
  inline void set_allocated_feature1(::std::string* feature1);

  // optional bytes feature2 = 2;
  inline bool has_feature2() const;
  inline void clear_feature2();
  static const int kFeature2FieldNumber = 2;
  inline const ::std::string& feature2() const;
  inline void set_feature2(const ::std::string& value);
  inline void set_feature2(const char* value);
  inline void set_feature2(const void* value, size_t size);
  inline ::std::string* mutable_feature2();
  inline ::std::string* release_feature2();
  inline void set_allocated_feature2(::std::string* feature2);

  // @@protoc_insertion_point(class_scope:faapi.CompareReq)
 private:
  inline void set_has_feature1();
  inline void clear_has_feature1();
  inline void set_has_feature2();
  inline void clear_has_feature2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* feature1_;
  ::std::string* feature2_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static CompareReq* default_instance_;
};
// -------------------------------------------------------------------

class CompareResp : public ::google::protobuf::Message {
 public:
  CompareResp();
  virtual ~CompareResp();

  CompareResp(const CompareResp& from);

  inline CompareResp& operator=(const CompareResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompareResp& default_instance();

  void Swap(CompareResp* other);

  // implements Message ----------------------------------------------

  CompareResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompareResp& from);
  void MergeFrom(const CompareResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline float score() const;
  inline void set_score(float value);

  // @@protoc_insertion_point(class_scope:faapi.CompareResp)
 private:
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float score_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static CompareResp* default_instance_;
};
// -------------------------------------------------------------------

class InsertReq : public ::google::protobuf::Message {
 public:
  InsertReq();
  virtual ~InsertReq();

  InsertReq(const InsertReq& from);

  inline InsertReq& operator=(const InsertReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertReq& default_instance();

  void Swap(InsertReq* other);

  // implements Message ----------------------------------------------

  InsertReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertReq& from);
  void MergeFrom(const InsertReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tagName = 1;
  inline bool has_tagname() const;
  inline void clear_tagname();
  static const int kTagNameFieldNumber = 1;
  inline const ::std::string& tagname() const;
  inline void set_tagname(const ::std::string& value);
  inline void set_tagname(const char* value);
  inline void set_tagname(const char* value, size_t size);
  inline ::std::string* mutable_tagname();
  inline ::std::string* release_tagname();
  inline void set_allocated_tagname(::std::string* tagname);

  // optional bytes feature = 2;
  inline bool has_feature() const;
  inline void clear_feature();
  static const int kFeatureFieldNumber = 2;
  inline const ::std::string& feature() const;
  inline void set_feature(const ::std::string& value);
  inline void set_feature(const char* value);
  inline void set_feature(const void* value, size_t size);
  inline ::std::string* mutable_feature();
  inline ::std::string* release_feature();
  inline void set_allocated_feature(::std::string* feature);

  // @@protoc_insertion_point(class_scope:faapi.InsertReq)
 private:
  inline void set_has_tagname();
  inline void clear_has_tagname();
  inline void set_has_feature();
  inline void clear_has_feature();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tagname_;
  ::std::string* feature_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static InsertReq* default_instance_;
};
// -------------------------------------------------------------------

class InsertResp : public ::google::protobuf::Message {
 public:
  InsertResp();
  virtual ~InsertResp();

  InsertResp(const InsertResp& from);

  inline InsertResp& operator=(const InsertResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertResp& default_instance();

  void Swap(InsertResp* other);

  // implements Message ----------------------------------------------

  InsertResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertResp& from);
  void MergeFrom(const InsertResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 faceID = 1;
  inline bool has_faceid() const;
  inline void clear_faceid();
  static const int kFaceIDFieldNumber = 1;
  inline ::google::protobuf::uint64 faceid() const;
  inline void set_faceid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:faapi.InsertResp)
 private:
  inline void set_has_faceid();
  inline void clear_has_faceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 faceid_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static InsertResp* default_instance_;
};
// -------------------------------------------------------------------

class DeleteReq : public ::google::protobuf::Message {
 public:
  DeleteReq();
  virtual ~DeleteReq();

  DeleteReq(const DeleteReq& from);

  inline DeleteReq& operator=(const DeleteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteReq& default_instance();

  void Swap(DeleteReq* other);

  // implements Message ----------------------------------------------

  DeleteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteReq& from);
  void MergeFrom(const DeleteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tagName = 1;
  inline bool has_tagname() const;
  inline void clear_tagname();
  static const int kTagNameFieldNumber = 1;
  inline const ::std::string& tagname() const;
  inline void set_tagname(const ::std::string& value);
  inline void set_tagname(const char* value);
  inline void set_tagname(const char* value, size_t size);
  inline ::std::string* mutable_tagname();
  inline ::std::string* release_tagname();
  inline void set_allocated_tagname(::std::string* tagname);

  // optional uint64 faceID = 2;
  inline bool has_faceid() const;
  inline void clear_faceid();
  static const int kFaceIDFieldNumber = 2;
  inline ::google::protobuf::uint64 faceid() const;
  inline void set_faceid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:faapi.DeleteReq)
 private:
  inline void set_has_tagname();
  inline void clear_has_tagname();
  inline void set_has_faceid();
  inline void clear_has_faceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tagname_;
  ::google::protobuf::uint64 faceid_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static DeleteReq* default_instance_;
};
// -------------------------------------------------------------------

class SearchReq : public ::google::protobuf::Message {
 public:
  SearchReq();
  virtual ~SearchReq();

  SearchReq(const SearchReq& from);

  inline SearchReq& operator=(const SearchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchReq& default_instance();

  void Swap(SearchReq* other);

  // implements Message ----------------------------------------------

  SearchReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchReq& from);
  void MergeFrom(const SearchReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes feature = 1;
  inline bool has_feature() const;
  inline void clear_feature();
  static const int kFeatureFieldNumber = 1;
  inline const ::std::string& feature() const;
  inline void set_feature(const ::std::string& value);
  inline void set_feature(const char* value);
  inline void set_feature(const void* value, size_t size);
  inline ::std::string* mutable_feature();
  inline ::std::string* release_feature();
  inline void set_allocated_feature(::std::string* feature);

  // repeated string tagNames = 2;
  inline int tagnames_size() const;
  inline void clear_tagnames();
  static const int kTagNamesFieldNumber = 2;
  inline const ::std::string& tagnames(int index) const;
  inline ::std::string* mutable_tagnames(int index);
  inline void set_tagnames(int index, const ::std::string& value);
  inline void set_tagnames(int index, const char* value);
  inline void set_tagnames(int index, const char* value, size_t size);
  inline ::std::string* add_tagnames();
  inline void add_tagnames(const ::std::string& value);
  inline void add_tagnames(const char* value);
  inline void add_tagnames(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tagnames() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tagnames();

  // optional int32 maxCount = 3;
  inline bool has_maxcount() const;
  inline void clear_maxcount();
  static const int kMaxCountFieldNumber = 3;
  inline ::google::protobuf::int32 maxcount() const;
  inline void set_maxcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:faapi.SearchReq)
 private:
  inline void set_has_feature();
  inline void clear_has_feature();
  inline void set_has_maxcount();
  inline void clear_has_maxcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* feature_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tagnames_;
  ::google::protobuf::int32 maxcount_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static SearchReq* default_instance_;
};
// -------------------------------------------------------------------

class SearchResp : public ::google::protobuf::Message {
 public:
  SearchResp();
  virtual ~SearchResp();

  SearchResp(const SearchResp& from);

  inline SearchResp& operator=(const SearchResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResp& default_instance();

  void Swap(SearchResp* other);

  // implements Message ----------------------------------------------

  SearchResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchResp& from);
  void MergeFrom(const SearchResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .faapi.SearchResult results = 1;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 1;
  inline const ::faapi::SearchResult& results(int index) const;
  inline ::faapi::SearchResult* mutable_results(int index);
  inline ::faapi::SearchResult* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::faapi::SearchResult >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::faapi::SearchResult >*
      mutable_results();

  // @@protoc_insertion_point(class_scope:faapi.SearchResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::faapi::SearchResult > results_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static SearchResp* default_instance_;
};
// -------------------------------------------------------------------

class ListTagsResp : public ::google::protobuf::Message {
 public:
  ListTagsResp();
  virtual ~ListTagsResp();

  ListTagsResp(const ListTagsResp& from);

  inline ListTagsResp& operator=(const ListTagsResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListTagsResp& default_instance();

  void Swap(ListTagsResp* other);

  // implements Message ----------------------------------------------

  ListTagsResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListTagsResp& from);
  void MergeFrom(const ListTagsResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string tagNames = 1;
  inline int tagnames_size() const;
  inline void clear_tagnames();
  static const int kTagNamesFieldNumber = 1;
  inline const ::std::string& tagnames(int index) const;
  inline ::std::string* mutable_tagnames(int index);
  inline void set_tagnames(int index, const ::std::string& value);
  inline void set_tagnames(int index, const char* value);
  inline void set_tagnames(int index, const char* value, size_t size);
  inline ::std::string* add_tagnames();
  inline void add_tagnames(const ::std::string& value);
  inline void add_tagnames(const char* value);
  inline void add_tagnames(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tagnames() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tagnames();

  // @@protoc_insertion_point(class_scope:faapi.ListTagsResp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tagnames_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static ListTagsResp* default_instance_;
};
// -------------------------------------------------------------------

class GetTagSizeReq : public ::google::protobuf::Message {
 public:
  GetTagSizeReq();
  virtual ~GetTagSizeReq();

  GetTagSizeReq(const GetTagSizeReq& from);

  inline GetTagSizeReq& operator=(const GetTagSizeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTagSizeReq& default_instance();

  void Swap(GetTagSizeReq* other);

  // implements Message ----------------------------------------------

  GetTagSizeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTagSizeReq& from);
  void MergeFrom(const GetTagSizeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tagName = 1;
  inline bool has_tagname() const;
  inline void clear_tagname();
  static const int kTagNameFieldNumber = 1;
  inline const ::std::string& tagname() const;
  inline void set_tagname(const ::std::string& value);
  inline void set_tagname(const char* value);
  inline void set_tagname(const char* value, size_t size);
  inline ::std::string* mutable_tagname();
  inline ::std::string* release_tagname();
  inline void set_allocated_tagname(::std::string* tagname);

  // @@protoc_insertion_point(class_scope:faapi.GetTagSizeReq)
 private:
  inline void set_has_tagname();
  inline void clear_has_tagname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tagname_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static GetTagSizeReq* default_instance_;
};
// -------------------------------------------------------------------

class GetTagSizeResp : public ::google::protobuf::Message {
 public:
  GetTagSizeResp();
  virtual ~GetTagSizeResp();

  GetTagSizeResp(const GetTagSizeResp& from);

  inline GetTagSizeResp& operator=(const GetTagSizeResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTagSizeResp& default_instance();

  void Swap(GetTagSizeResp* other);

  // implements Message ----------------------------------------------

  GetTagSizeResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTagSizeResp& from);
  void MergeFrom(const GetTagSizeResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 size = 1;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 1;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:faapi.GetTagSizeResp)
 private:
  inline void set_has_size();
  inline void clear_has_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 size_;
  friend void  protobuf_AddDesc_faapi_2eproto();
  friend void protobuf_AssignDesc_faapi_2eproto();
  friend void protobuf_ShutdownFile_faapi_2eproto();

  void InitAsDefaultInstance();
  static GetTagSizeResp* default_instance_;
};
// ===================================================================


// ===================================================================

// Rect

// optional int32 left = 1;
inline bool Rect::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Rect::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Rect::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Rect::clear_left() {
  left_ = 0;
  clear_has_left();
}
inline ::google::protobuf::int32 Rect::left() const {
  // @@protoc_insertion_point(field_get:faapi.Rect.left)
  return left_;
}
inline void Rect::set_left(::google::protobuf::int32 value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:faapi.Rect.left)
}

// optional int32 top = 2;
inline bool Rect::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Rect::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Rect::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Rect::clear_top() {
  top_ = 0;
  clear_has_top();
}
inline ::google::protobuf::int32 Rect::top() const {
  // @@protoc_insertion_point(field_get:faapi.Rect.top)
  return top_;
}
inline void Rect::set_top(::google::protobuf::int32 value) {
  set_has_top();
  top_ = value;
  // @@protoc_insertion_point(field_set:faapi.Rect.top)
}

// optional int32 right = 3;
inline bool Rect::has_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Rect::set_has_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Rect::clear_has_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Rect::clear_right() {
  right_ = 0;
  clear_has_right();
}
inline ::google::protobuf::int32 Rect::right() const {
  // @@protoc_insertion_point(field_get:faapi.Rect.right)
  return right_;
}
inline void Rect::set_right(::google::protobuf::int32 value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:faapi.Rect.right)
}

// optional int32 bottom = 4;
inline bool Rect::has_bottom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Rect::set_has_bottom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Rect::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Rect::clear_bottom() {
  bottom_ = 0;
  clear_has_bottom();
}
inline ::google::protobuf::int32 Rect::bottom() const {
  // @@protoc_insertion_point(field_get:faapi.Rect.bottom)
  return bottom_;
}
inline void Rect::set_bottom(::google::protobuf::int32 value) {
  set_has_bottom();
  bottom_ = value;
  // @@protoc_insertion_point(field_set:faapi.Rect.bottom)
}

// -------------------------------------------------------------------

// Img

// optional bytes buf = 1;
inline bool Img::has_buf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Img::set_has_buf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Img::clear_has_buf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Img::clear_buf() {
  if (buf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buf_->clear();
  }
  clear_has_buf();
}
inline const ::std::string& Img::buf() const {
  // @@protoc_insertion_point(field_get:faapi.Img.buf)
  return *buf_;
}
inline void Img::set_buf(const ::std::string& value) {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buf_ = new ::std::string;
  }
  buf_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.Img.buf)
}
inline void Img::set_buf(const char* value) {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buf_ = new ::std::string;
  }
  buf_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.Img.buf)
}
inline void Img::set_buf(const void* value, size_t size) {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buf_ = new ::std::string;
  }
  buf_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.Img.buf)
}
inline ::std::string* Img::mutable_buf() {
  set_has_buf();
  if (buf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buf_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.Img.buf)
  return buf_;
}
inline ::std::string* Img::release_buf() {
  clear_has_buf();
  if (buf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = buf_;
    buf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Img::set_allocated_buf(::std::string* buf) {
  if (buf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buf_;
  }
  if (buf) {
    set_has_buf();
    buf_ = buf;
  } else {
    clear_has_buf();
    buf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.Img.buf)
}

// optional int32 width = 2;
inline bool Img::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Img::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Img::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Img::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 Img::width() const {
  // @@protoc_insertion_point(field_get:faapi.Img.width)
  return width_;
}
inline void Img::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:faapi.Img.width)
}

// optional int32 height = 3;
inline bool Img::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Img::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Img::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Img::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 Img::height() const {
  // @@protoc_insertion_point(field_get:faapi.Img.height)
  return height_;
}
inline void Img::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:faapi.Img.height)
}

// optional bool isRaw = 4;
inline bool Img::has_israw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Img::set_has_israw() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Img::clear_has_israw() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Img::clear_israw() {
  israw_ = false;
  clear_has_israw();
}
inline bool Img::israw() const {
  // @@protoc_insertion_point(field_get:faapi.Img.isRaw)
  return israw_;
}
inline void Img::set_israw(bool value) {
  set_has_israw();
  israw_ = value;
  // @@protoc_insertion_point(field_set:faapi.Img.isRaw)
}

// -------------------------------------------------------------------

// DetectResult

// optional float confidence = 1;
inline bool DetectResult::has_confidence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DetectResult::set_has_confidence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DetectResult::clear_has_confidence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DetectResult::clear_confidence() {
  confidence_ = 0;
  clear_has_confidence();
}
inline float DetectResult::confidence() const {
  // @@protoc_insertion_point(field_get:faapi.DetectResult.confidence)
  return confidence_;
}
inline void DetectResult::set_confidence(float value) {
  set_has_confidence();
  confidence_ = value;
  // @@protoc_insertion_point(field_set:faapi.DetectResult.confidence)
}

// optional .faapi.Rect rect = 2;
inline bool DetectResult::has_rect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DetectResult::set_has_rect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DetectResult::clear_has_rect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DetectResult::clear_rect() {
  if (rect_ != NULL) rect_->::faapi::Rect::Clear();
  clear_has_rect();
}
inline const ::faapi::Rect& DetectResult::rect() const {
  // @@protoc_insertion_point(field_get:faapi.DetectResult.rect)
  return rect_ != NULL ? *rect_ : *default_instance_->rect_;
}
inline ::faapi::Rect* DetectResult::mutable_rect() {
  set_has_rect();
  if (rect_ == NULL) rect_ = new ::faapi::Rect;
  // @@protoc_insertion_point(field_mutable:faapi.DetectResult.rect)
  return rect_;
}
inline ::faapi::Rect* DetectResult::release_rect() {
  clear_has_rect();
  ::faapi::Rect* temp = rect_;
  rect_ = NULL;
  return temp;
}
inline void DetectResult::set_allocated_rect(::faapi::Rect* rect) {
  delete rect_;
  rect_ = rect;
  if (rect) {
    set_has_rect();
  } else {
    clear_has_rect();
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.DetectResult.rect)
}

// optional bytes faceInfo = 3;
inline bool DetectResult::has_faceinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DetectResult::set_has_faceinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DetectResult::clear_has_faceinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DetectResult::clear_faceinfo() {
  if (faceinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceinfo_->clear();
  }
  clear_has_faceinfo();
}
inline const ::std::string& DetectResult::faceinfo() const {
  // @@protoc_insertion_point(field_get:faapi.DetectResult.faceInfo)
  return *faceinfo_;
}
inline void DetectResult::set_faceinfo(const ::std::string& value) {
  set_has_faceinfo();
  if (faceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceinfo_ = new ::std::string;
  }
  faceinfo_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.DetectResult.faceInfo)
}
inline void DetectResult::set_faceinfo(const char* value) {
  set_has_faceinfo();
  if (faceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceinfo_ = new ::std::string;
  }
  faceinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.DetectResult.faceInfo)
}
inline void DetectResult::set_faceinfo(const void* value, size_t size) {
  set_has_faceinfo();
  if (faceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceinfo_ = new ::std::string;
  }
  faceinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.DetectResult.faceInfo)
}
inline ::std::string* DetectResult::mutable_faceinfo() {
  set_has_faceinfo();
  if (faceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.DetectResult.faceInfo)
  return faceinfo_;
}
inline ::std::string* DetectResult::release_faceinfo() {
  clear_has_faceinfo();
  if (faceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = faceinfo_;
    faceinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DetectResult::set_allocated_faceinfo(::std::string* faceinfo) {
  if (faceinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete faceinfo_;
  }
  if (faceinfo) {
    set_has_faceinfo();
    faceinfo_ = faceinfo;
  } else {
    clear_has_faceinfo();
    faceinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.DetectResult.faceInfo)
}

// -------------------------------------------------------------------

// ExtractResult

// optional .faapi.Rect rect = 1;
inline bool ExtractResult::has_rect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtractResult::set_has_rect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtractResult::clear_has_rect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtractResult::clear_rect() {
  if (rect_ != NULL) rect_->::faapi::Rect::Clear();
  clear_has_rect();
}
inline const ::faapi::Rect& ExtractResult::rect() const {
  // @@protoc_insertion_point(field_get:faapi.ExtractResult.rect)
  return rect_ != NULL ? *rect_ : *default_instance_->rect_;
}
inline ::faapi::Rect* ExtractResult::mutable_rect() {
  set_has_rect();
  if (rect_ == NULL) rect_ = new ::faapi::Rect;
  // @@protoc_insertion_point(field_mutable:faapi.ExtractResult.rect)
  return rect_;
}
inline ::faapi::Rect* ExtractResult::release_rect() {
  clear_has_rect();
  ::faapi::Rect* temp = rect_;
  rect_ = NULL;
  return temp;
}
inline void ExtractResult::set_allocated_rect(::faapi::Rect* rect) {
  delete rect_;
  rect_ = rect;
  if (rect) {
    set_has_rect();
  } else {
    clear_has_rect();
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.ExtractResult.rect)
}

// optional bytes feature = 2;
inline bool ExtractResult::has_feature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtractResult::set_has_feature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExtractResult::clear_has_feature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExtractResult::clear_feature() {
  if (feature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_->clear();
  }
  clear_has_feature();
}
inline const ::std::string& ExtractResult::feature() const {
  // @@protoc_insertion_point(field_get:faapi.ExtractResult.feature)
  return *feature_;
}
inline void ExtractResult::set_feature(const ::std::string& value) {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  feature_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.ExtractResult.feature)
}
inline void ExtractResult::set_feature(const char* value) {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  feature_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.ExtractResult.feature)
}
inline void ExtractResult::set_feature(const void* value, size_t size) {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  feature_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.ExtractResult.feature)
}
inline ::std::string* ExtractResult::mutable_feature() {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.ExtractResult.feature)
  return feature_;
}
inline ::std::string* ExtractResult::release_feature() {
  clear_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = feature_;
    feature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ExtractResult::set_allocated_feature(::std::string* feature) {
  if (feature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete feature_;
  }
  if (feature) {
    set_has_feature();
    feature_ = feature;
  } else {
    clear_has_feature();
    feature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.ExtractResult.feature)
}

// -------------------------------------------------------------------

// SearchResult

// optional uint64 faceID = 1;
inline bool SearchResult::has_faceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchResult::set_has_faceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchResult::clear_has_faceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchResult::clear_faceid() {
  faceid_ = GOOGLE_ULONGLONG(0);
  clear_has_faceid();
}
inline ::google::protobuf::uint64 SearchResult::faceid() const {
  // @@protoc_insertion_point(field_get:faapi.SearchResult.faceID)
  return faceid_;
}
inline void SearchResult::set_faceid(::google::protobuf::uint64 value) {
  set_has_faceid();
  faceid_ = value;
  // @@protoc_insertion_point(field_set:faapi.SearchResult.faceID)
}

// optional float score = 2;
inline bool SearchResult::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchResult::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchResult::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchResult::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline float SearchResult::score() const {
  // @@protoc_insertion_point(field_get:faapi.SearchResult.score)
  return score_;
}
inline void SearchResult::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:faapi.SearchResult.score)
}

// optional string tagName = 3;
inline bool SearchResult::has_tagname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SearchResult::set_has_tagname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SearchResult::clear_has_tagname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SearchResult::clear_tagname() {
  if (tagname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_->clear();
  }
  clear_has_tagname();
}
inline const ::std::string& SearchResult::tagname() const {
  // @@protoc_insertion_point(field_get:faapi.SearchResult.tagName)
  return *tagname_;
}
inline void SearchResult::set_tagname(const ::std::string& value) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.SearchResult.tagName)
}
inline void SearchResult::set_tagname(const char* value) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.SearchResult.tagName)
}
inline void SearchResult::set_tagname(const char* value, size_t size) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.SearchResult.tagName)
}
inline ::std::string* SearchResult::mutable_tagname() {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.SearchResult.tagName)
  return tagname_;
}
inline ::std::string* SearchResult::release_tagname() {
  clear_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tagname_;
    tagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SearchResult::set_allocated_tagname(::std::string* tagname) {
  if (tagname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tagname_;
  }
  if (tagname) {
    set_has_tagname();
    tagname_ = tagname;
  } else {
    clear_has_tagname();
    tagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.SearchResult.tagName)
}

// -------------------------------------------------------------------

// DetectReq

// optional .faapi.Img img = 1;
inline bool DetectReq::has_img() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DetectReq::set_has_img() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DetectReq::clear_has_img() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DetectReq::clear_img() {
  if (img_ != NULL) img_->::faapi::Img::Clear();
  clear_has_img();
}
inline const ::faapi::Img& DetectReq::img() const {
  // @@protoc_insertion_point(field_get:faapi.DetectReq.img)
  return img_ != NULL ? *img_ : *default_instance_->img_;
}
inline ::faapi::Img* DetectReq::mutable_img() {
  set_has_img();
  if (img_ == NULL) img_ = new ::faapi::Img;
  // @@protoc_insertion_point(field_mutable:faapi.DetectReq.img)
  return img_;
}
inline ::faapi::Img* DetectReq::release_img() {
  clear_has_img();
  ::faapi::Img* temp = img_;
  img_ = NULL;
  return temp;
}
inline void DetectReq::set_allocated_img(::faapi::Img* img) {
  delete img_;
  img_ = img;
  if (img) {
    set_has_img();
  } else {
    clear_has_img();
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.DetectReq.img)
}

// -------------------------------------------------------------------

// DetectResp

// repeated .faapi.DetectResult results = 1;
inline int DetectResp::results_size() const {
  return results_.size();
}
inline void DetectResp::clear_results() {
  results_.Clear();
}
inline const ::faapi::DetectResult& DetectResp::results(int index) const {
  // @@protoc_insertion_point(field_get:faapi.DetectResp.results)
  return results_.Get(index);
}
inline ::faapi::DetectResult* DetectResp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:faapi.DetectResp.results)
  return results_.Mutable(index);
}
inline ::faapi::DetectResult* DetectResp::add_results() {
  // @@protoc_insertion_point(field_add:faapi.DetectResp.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::faapi::DetectResult >&
DetectResp::results() const {
  // @@protoc_insertion_point(field_list:faapi.DetectResp.results)
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::faapi::DetectResult >*
DetectResp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:faapi.DetectResp.results)
  return &results_;
}

// -------------------------------------------------------------------

// ExtractReq

// optional .faapi.Img img = 1;
inline bool ExtractReq::has_img() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtractReq::set_has_img() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtractReq::clear_has_img() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtractReq::clear_img() {
  if (img_ != NULL) img_->::faapi::Img::Clear();
  clear_has_img();
}
inline const ::faapi::Img& ExtractReq::img() const {
  // @@protoc_insertion_point(field_get:faapi.ExtractReq.img)
  return img_ != NULL ? *img_ : *default_instance_->img_;
}
inline ::faapi::Img* ExtractReq::mutable_img() {
  set_has_img();
  if (img_ == NULL) img_ = new ::faapi::Img;
  // @@protoc_insertion_point(field_mutable:faapi.ExtractReq.img)
  return img_;
}
inline ::faapi::Img* ExtractReq::release_img() {
  clear_has_img();
  ::faapi::Img* temp = img_;
  img_ = NULL;
  return temp;
}
inline void ExtractReq::set_allocated_img(::faapi::Img* img) {
  delete img_;
  img_ = img;
  if (img) {
    set_has_img();
  } else {
    clear_has_img();
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.ExtractReq.img)
}

// optional bytes faceInfo = 2;
inline bool ExtractReq::has_faceinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtractReq::set_has_faceinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExtractReq::clear_has_faceinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExtractReq::clear_faceinfo() {
  if (faceinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceinfo_->clear();
  }
  clear_has_faceinfo();
}
inline const ::std::string& ExtractReq::faceinfo() const {
  // @@protoc_insertion_point(field_get:faapi.ExtractReq.faceInfo)
  return *faceinfo_;
}
inline void ExtractReq::set_faceinfo(const ::std::string& value) {
  set_has_faceinfo();
  if (faceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceinfo_ = new ::std::string;
  }
  faceinfo_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.ExtractReq.faceInfo)
}
inline void ExtractReq::set_faceinfo(const char* value) {
  set_has_faceinfo();
  if (faceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceinfo_ = new ::std::string;
  }
  faceinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.ExtractReq.faceInfo)
}
inline void ExtractReq::set_faceinfo(const void* value, size_t size) {
  set_has_faceinfo();
  if (faceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceinfo_ = new ::std::string;
  }
  faceinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.ExtractReq.faceInfo)
}
inline ::std::string* ExtractReq::mutable_faceinfo() {
  set_has_faceinfo();
  if (faceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.ExtractReq.faceInfo)
  return faceinfo_;
}
inline ::std::string* ExtractReq::release_faceinfo() {
  clear_has_faceinfo();
  if (faceinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = faceinfo_;
    faceinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ExtractReq::set_allocated_faceinfo(::std::string* faceinfo) {
  if (faceinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete faceinfo_;
  }
  if (faceinfo) {
    set_has_faceinfo();
    faceinfo_ = faceinfo;
  } else {
    clear_has_faceinfo();
    faceinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.ExtractReq.faceInfo)
}

// -------------------------------------------------------------------

// ExtractResp

// optional .faapi.ExtractResult result = 1;
inline bool ExtractResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtractResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtractResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtractResp::clear_result() {
  if (result_ != NULL) result_->::faapi::ExtractResult::Clear();
  clear_has_result();
}
inline const ::faapi::ExtractResult& ExtractResp::result() const {
  // @@protoc_insertion_point(field_get:faapi.ExtractResp.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::faapi::ExtractResult* ExtractResp::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::faapi::ExtractResult;
  // @@protoc_insertion_point(field_mutable:faapi.ExtractResp.result)
  return result_;
}
inline ::faapi::ExtractResult* ExtractResp::release_result() {
  clear_has_result();
  ::faapi::ExtractResult* temp = result_;
  result_ = NULL;
  return temp;
}
inline void ExtractResp::set_allocated_result(::faapi::ExtractResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.ExtractResp.result)
}

// -------------------------------------------------------------------

// CompareReq

// optional bytes feature1 = 1;
inline bool CompareReq::has_feature1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CompareReq::set_has_feature1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CompareReq::clear_has_feature1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CompareReq::clear_feature1() {
  if (feature1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature1_->clear();
  }
  clear_has_feature1();
}
inline const ::std::string& CompareReq::feature1() const {
  // @@protoc_insertion_point(field_get:faapi.CompareReq.feature1)
  return *feature1_;
}
inline void CompareReq::set_feature1(const ::std::string& value) {
  set_has_feature1();
  if (feature1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature1_ = new ::std::string;
  }
  feature1_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.CompareReq.feature1)
}
inline void CompareReq::set_feature1(const char* value) {
  set_has_feature1();
  if (feature1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature1_ = new ::std::string;
  }
  feature1_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.CompareReq.feature1)
}
inline void CompareReq::set_feature1(const void* value, size_t size) {
  set_has_feature1();
  if (feature1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature1_ = new ::std::string;
  }
  feature1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.CompareReq.feature1)
}
inline ::std::string* CompareReq::mutable_feature1() {
  set_has_feature1();
  if (feature1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.CompareReq.feature1)
  return feature1_;
}
inline ::std::string* CompareReq::release_feature1() {
  clear_has_feature1();
  if (feature1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = feature1_;
    feature1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CompareReq::set_allocated_feature1(::std::string* feature1) {
  if (feature1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete feature1_;
  }
  if (feature1) {
    set_has_feature1();
    feature1_ = feature1;
  } else {
    clear_has_feature1();
    feature1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.CompareReq.feature1)
}

// optional bytes feature2 = 2;
inline bool CompareReq::has_feature2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CompareReq::set_has_feature2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CompareReq::clear_has_feature2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CompareReq::clear_feature2() {
  if (feature2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature2_->clear();
  }
  clear_has_feature2();
}
inline const ::std::string& CompareReq::feature2() const {
  // @@protoc_insertion_point(field_get:faapi.CompareReq.feature2)
  return *feature2_;
}
inline void CompareReq::set_feature2(const ::std::string& value) {
  set_has_feature2();
  if (feature2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature2_ = new ::std::string;
  }
  feature2_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.CompareReq.feature2)
}
inline void CompareReq::set_feature2(const char* value) {
  set_has_feature2();
  if (feature2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature2_ = new ::std::string;
  }
  feature2_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.CompareReq.feature2)
}
inline void CompareReq::set_feature2(const void* value, size_t size) {
  set_has_feature2();
  if (feature2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature2_ = new ::std::string;
  }
  feature2_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.CompareReq.feature2)
}
inline ::std::string* CompareReq::mutable_feature2() {
  set_has_feature2();
  if (feature2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature2_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.CompareReq.feature2)
  return feature2_;
}
inline ::std::string* CompareReq::release_feature2() {
  clear_has_feature2();
  if (feature2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = feature2_;
    feature2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CompareReq::set_allocated_feature2(::std::string* feature2) {
  if (feature2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete feature2_;
  }
  if (feature2) {
    set_has_feature2();
    feature2_ = feature2;
  } else {
    clear_has_feature2();
    feature2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.CompareReq.feature2)
}

// -------------------------------------------------------------------

// CompareResp

// optional float score = 1;
inline bool CompareResp::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CompareResp::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CompareResp::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CompareResp::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline float CompareResp::score() const {
  // @@protoc_insertion_point(field_get:faapi.CompareResp.score)
  return score_;
}
inline void CompareResp::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:faapi.CompareResp.score)
}

// -------------------------------------------------------------------

// InsertReq

// optional string tagName = 1;
inline bool InsertReq::has_tagname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InsertReq::set_has_tagname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InsertReq::clear_has_tagname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InsertReq::clear_tagname() {
  if (tagname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_->clear();
  }
  clear_has_tagname();
}
inline const ::std::string& InsertReq::tagname() const {
  // @@protoc_insertion_point(field_get:faapi.InsertReq.tagName)
  return *tagname_;
}
inline void InsertReq::set_tagname(const ::std::string& value) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.InsertReq.tagName)
}
inline void InsertReq::set_tagname(const char* value) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.InsertReq.tagName)
}
inline void InsertReq::set_tagname(const char* value, size_t size) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.InsertReq.tagName)
}
inline ::std::string* InsertReq::mutable_tagname() {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.InsertReq.tagName)
  return tagname_;
}
inline ::std::string* InsertReq::release_tagname() {
  clear_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tagname_;
    tagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InsertReq::set_allocated_tagname(::std::string* tagname) {
  if (tagname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tagname_;
  }
  if (tagname) {
    set_has_tagname();
    tagname_ = tagname;
  } else {
    clear_has_tagname();
    tagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.InsertReq.tagName)
}

// optional bytes feature = 2;
inline bool InsertReq::has_feature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InsertReq::set_has_feature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InsertReq::clear_has_feature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InsertReq::clear_feature() {
  if (feature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_->clear();
  }
  clear_has_feature();
}
inline const ::std::string& InsertReq::feature() const {
  // @@protoc_insertion_point(field_get:faapi.InsertReq.feature)
  return *feature_;
}
inline void InsertReq::set_feature(const ::std::string& value) {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  feature_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.InsertReq.feature)
}
inline void InsertReq::set_feature(const char* value) {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  feature_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.InsertReq.feature)
}
inline void InsertReq::set_feature(const void* value, size_t size) {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  feature_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.InsertReq.feature)
}
inline ::std::string* InsertReq::mutable_feature() {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.InsertReq.feature)
  return feature_;
}
inline ::std::string* InsertReq::release_feature() {
  clear_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = feature_;
    feature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void InsertReq::set_allocated_feature(::std::string* feature) {
  if (feature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete feature_;
  }
  if (feature) {
    set_has_feature();
    feature_ = feature;
  } else {
    clear_has_feature();
    feature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.InsertReq.feature)
}

// -------------------------------------------------------------------

// InsertResp

// optional uint64 faceID = 1;
inline bool InsertResp::has_faceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InsertResp::set_has_faceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InsertResp::clear_has_faceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InsertResp::clear_faceid() {
  faceid_ = GOOGLE_ULONGLONG(0);
  clear_has_faceid();
}
inline ::google::protobuf::uint64 InsertResp::faceid() const {
  // @@protoc_insertion_point(field_get:faapi.InsertResp.faceID)
  return faceid_;
}
inline void InsertResp::set_faceid(::google::protobuf::uint64 value) {
  set_has_faceid();
  faceid_ = value;
  // @@protoc_insertion_point(field_set:faapi.InsertResp.faceID)
}

// -------------------------------------------------------------------

// DeleteReq

// optional string tagName = 1;
inline bool DeleteReq::has_tagname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteReq::set_has_tagname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteReq::clear_has_tagname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteReq::clear_tagname() {
  if (tagname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_->clear();
  }
  clear_has_tagname();
}
inline const ::std::string& DeleteReq::tagname() const {
  // @@protoc_insertion_point(field_get:faapi.DeleteReq.tagName)
  return *tagname_;
}
inline void DeleteReq::set_tagname(const ::std::string& value) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.DeleteReq.tagName)
}
inline void DeleteReq::set_tagname(const char* value) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.DeleteReq.tagName)
}
inline void DeleteReq::set_tagname(const char* value, size_t size) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.DeleteReq.tagName)
}
inline ::std::string* DeleteReq::mutable_tagname() {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.DeleteReq.tagName)
  return tagname_;
}
inline ::std::string* DeleteReq::release_tagname() {
  clear_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tagname_;
    tagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeleteReq::set_allocated_tagname(::std::string* tagname) {
  if (tagname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tagname_;
  }
  if (tagname) {
    set_has_tagname();
    tagname_ = tagname;
  } else {
    clear_has_tagname();
    tagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.DeleteReq.tagName)
}

// optional uint64 faceID = 2;
inline bool DeleteReq::has_faceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteReq::set_has_faceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteReq::clear_has_faceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteReq::clear_faceid() {
  faceid_ = GOOGLE_ULONGLONG(0);
  clear_has_faceid();
}
inline ::google::protobuf::uint64 DeleteReq::faceid() const {
  // @@protoc_insertion_point(field_get:faapi.DeleteReq.faceID)
  return faceid_;
}
inline void DeleteReq::set_faceid(::google::protobuf::uint64 value) {
  set_has_faceid();
  faceid_ = value;
  // @@protoc_insertion_point(field_set:faapi.DeleteReq.faceID)
}

// -------------------------------------------------------------------

// SearchReq

// optional bytes feature = 1;
inline bool SearchReq::has_feature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchReq::set_has_feature() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchReq::clear_has_feature() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchReq::clear_feature() {
  if (feature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_->clear();
  }
  clear_has_feature();
}
inline const ::std::string& SearchReq::feature() const {
  // @@protoc_insertion_point(field_get:faapi.SearchReq.feature)
  return *feature_;
}
inline void SearchReq::set_feature(const ::std::string& value) {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  feature_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.SearchReq.feature)
}
inline void SearchReq::set_feature(const char* value) {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  feature_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.SearchReq.feature)
}
inline void SearchReq::set_feature(const void* value, size_t size) {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  feature_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.SearchReq.feature)
}
inline ::std::string* SearchReq::mutable_feature() {
  set_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    feature_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.SearchReq.feature)
  return feature_;
}
inline ::std::string* SearchReq::release_feature() {
  clear_has_feature();
  if (feature_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = feature_;
    feature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SearchReq::set_allocated_feature(::std::string* feature) {
  if (feature_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete feature_;
  }
  if (feature) {
    set_has_feature();
    feature_ = feature;
  } else {
    clear_has_feature();
    feature_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.SearchReq.feature)
}

// repeated string tagNames = 2;
inline int SearchReq::tagnames_size() const {
  return tagnames_.size();
}
inline void SearchReq::clear_tagnames() {
  tagnames_.Clear();
}
inline const ::std::string& SearchReq::tagnames(int index) const {
  // @@protoc_insertion_point(field_get:faapi.SearchReq.tagNames)
  return tagnames_.Get(index);
}
inline ::std::string* SearchReq::mutable_tagnames(int index) {
  // @@protoc_insertion_point(field_mutable:faapi.SearchReq.tagNames)
  return tagnames_.Mutable(index);
}
inline void SearchReq::set_tagnames(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:faapi.SearchReq.tagNames)
  tagnames_.Mutable(index)->assign(value);
}
inline void SearchReq::set_tagnames(int index, const char* value) {
  tagnames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.SearchReq.tagNames)
}
inline void SearchReq::set_tagnames(int index, const char* value, size_t size) {
  tagnames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.SearchReq.tagNames)
}
inline ::std::string* SearchReq::add_tagnames() {
  return tagnames_.Add();
}
inline void SearchReq::add_tagnames(const ::std::string& value) {
  tagnames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:faapi.SearchReq.tagNames)
}
inline void SearchReq::add_tagnames(const char* value) {
  tagnames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:faapi.SearchReq.tagNames)
}
inline void SearchReq::add_tagnames(const char* value, size_t size) {
  tagnames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:faapi.SearchReq.tagNames)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchReq::tagnames() const {
  // @@protoc_insertion_point(field_list:faapi.SearchReq.tagNames)
  return tagnames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchReq::mutable_tagnames() {
  // @@protoc_insertion_point(field_mutable_list:faapi.SearchReq.tagNames)
  return &tagnames_;
}

// optional int32 maxCount = 3;
inline bool SearchReq::has_maxcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SearchReq::set_has_maxcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SearchReq::clear_has_maxcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SearchReq::clear_maxcount() {
  maxcount_ = 0;
  clear_has_maxcount();
}
inline ::google::protobuf::int32 SearchReq::maxcount() const {
  // @@protoc_insertion_point(field_get:faapi.SearchReq.maxCount)
  return maxcount_;
}
inline void SearchReq::set_maxcount(::google::protobuf::int32 value) {
  set_has_maxcount();
  maxcount_ = value;
  // @@protoc_insertion_point(field_set:faapi.SearchReq.maxCount)
}

// -------------------------------------------------------------------

// SearchResp

// repeated .faapi.SearchResult results = 1;
inline int SearchResp::results_size() const {
  return results_.size();
}
inline void SearchResp::clear_results() {
  results_.Clear();
}
inline const ::faapi::SearchResult& SearchResp::results(int index) const {
  // @@protoc_insertion_point(field_get:faapi.SearchResp.results)
  return results_.Get(index);
}
inline ::faapi::SearchResult* SearchResp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:faapi.SearchResp.results)
  return results_.Mutable(index);
}
inline ::faapi::SearchResult* SearchResp::add_results() {
  // @@protoc_insertion_point(field_add:faapi.SearchResp.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::faapi::SearchResult >&
SearchResp::results() const {
  // @@protoc_insertion_point(field_list:faapi.SearchResp.results)
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::faapi::SearchResult >*
SearchResp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:faapi.SearchResp.results)
  return &results_;
}

// -------------------------------------------------------------------

// ListTagsResp

// repeated string tagNames = 1;
inline int ListTagsResp::tagnames_size() const {
  return tagnames_.size();
}
inline void ListTagsResp::clear_tagnames() {
  tagnames_.Clear();
}
inline const ::std::string& ListTagsResp::tagnames(int index) const {
  // @@protoc_insertion_point(field_get:faapi.ListTagsResp.tagNames)
  return tagnames_.Get(index);
}
inline ::std::string* ListTagsResp::mutable_tagnames(int index) {
  // @@protoc_insertion_point(field_mutable:faapi.ListTagsResp.tagNames)
  return tagnames_.Mutable(index);
}
inline void ListTagsResp::set_tagnames(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:faapi.ListTagsResp.tagNames)
  tagnames_.Mutable(index)->assign(value);
}
inline void ListTagsResp::set_tagnames(int index, const char* value) {
  tagnames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.ListTagsResp.tagNames)
}
inline void ListTagsResp::set_tagnames(int index, const char* value, size_t size) {
  tagnames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.ListTagsResp.tagNames)
}
inline ::std::string* ListTagsResp::add_tagnames() {
  return tagnames_.Add();
}
inline void ListTagsResp::add_tagnames(const ::std::string& value) {
  tagnames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:faapi.ListTagsResp.tagNames)
}
inline void ListTagsResp::add_tagnames(const char* value) {
  tagnames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:faapi.ListTagsResp.tagNames)
}
inline void ListTagsResp::add_tagnames(const char* value, size_t size) {
  tagnames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:faapi.ListTagsResp.tagNames)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListTagsResp::tagnames() const {
  // @@protoc_insertion_point(field_list:faapi.ListTagsResp.tagNames)
  return tagnames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListTagsResp::mutable_tagnames() {
  // @@protoc_insertion_point(field_mutable_list:faapi.ListTagsResp.tagNames)
  return &tagnames_;
}

// -------------------------------------------------------------------

// GetTagSizeReq

// optional string tagName = 1;
inline bool GetTagSizeReq::has_tagname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTagSizeReq::set_has_tagname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTagSizeReq::clear_has_tagname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTagSizeReq::clear_tagname() {
  if (tagname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_->clear();
  }
  clear_has_tagname();
}
inline const ::std::string& GetTagSizeReq::tagname() const {
  // @@protoc_insertion_point(field_get:faapi.GetTagSizeReq.tagName)
  return *tagname_;
}
inline void GetTagSizeReq::set_tagname(const ::std::string& value) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(value);
  // @@protoc_insertion_point(field_set:faapi.GetTagSizeReq.tagName)
}
inline void GetTagSizeReq::set_tagname(const char* value) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.GetTagSizeReq.tagName)
}
inline void GetTagSizeReq::set_tagname(const char* value, size_t size) {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  tagname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.GetTagSizeReq.tagName)
}
inline ::std::string* GetTagSizeReq::mutable_tagname() {
  set_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tagname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:faapi.GetTagSizeReq.tagName)
  return tagname_;
}
inline ::std::string* GetTagSizeReq::release_tagname() {
  clear_has_tagname();
  if (tagname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tagname_;
    tagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetTagSizeReq::set_allocated_tagname(::std::string* tagname) {
  if (tagname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tagname_;
  }
  if (tagname) {
    set_has_tagname();
    tagname_ = tagname;
  } else {
    clear_has_tagname();
    tagname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.GetTagSizeReq.tagName)
}

// -------------------------------------------------------------------

// GetTagSizeResp

// optional int32 size = 1;
inline bool GetTagSizeResp::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTagSizeResp::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTagSizeResp::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTagSizeResp::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetTagSizeResp::size() const {
  // @@protoc_insertion_point(field_get:faapi.GetTagSizeResp.size)
  return size_;
}
inline void GetTagSizeResp::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:faapi.GetTagSizeResp.size)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace faapi

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::faapi::MSG> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::faapi::MSG>() {
  return ::faapi::MSG_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_faapi_2eproto__INCLUDED
